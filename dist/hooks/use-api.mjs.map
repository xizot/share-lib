{"version":3,"sources":["../../src/hooks/use-api.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\"\n\ninterface UseApiOptions {\n  immediate?: boolean\n}\n\ninterface UseApiReturn<T> {\n  data: T | null\n  loading: boolean\n  error: string | null\n  execute: (...args: any[]) => Promise<void>\n}\n\nexport function useApi<T>(\n  apiFunction: (...args: any[]) => Promise<T>,\n  options: UseApiOptions = {}\n): UseApiReturn<T> {\n  const { immediate = false } = options\n  const [data, setData] = useState<T | null>(null)\n  const [loading, setLoading] = useState<boolean>(immediate)\n  const [error, setError] = useState<string | null>(null)\n\n  const execute = useCallback(async (...args: any[]) => {\n    try {\n      setLoading(true)\n      setError(null)\n      const result = await apiFunction(...args)\n      setData(result)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"An error occurred\")\n    } finally {\n      setLoading(false)\n    }\n  }, [apiFunction])\n\n  useEffect(() => {\n    if (immediate) {\n      execute()\n    }\n  }, [execute, immediate])\n\n  return { data, loading, error, execute }\n} "],"mappings":";;;AAAA,SAAS,UAAU,WAAW,mBAAmB;AAa1C,SAAS,OACd,aACA,UAAyB,CAAC,GACT;AACjB,QAAM,EAAE,YAAY,MAAM,IAAI;AAC9B,QAAM,CAAC,MAAM,OAAO,IAAI,SAAmB,IAAI;AAC/C,QAAM,CAAC,SAAS,UAAU,IAAI,SAAkB,SAAS;AACzD,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAwB,IAAI;AAEtD,QAAM,UAAU,YAAY,UAAU,SAAgB;AACpD,QAAI;AACF,iBAAW,IAAI;AACf,eAAS,IAAI;AACb,YAAM,SAAS,MAAM,YAAY,GAAG,IAAI;AACxC,cAAQ,MAAM;AAAA,IAChB,SAAS,KAAK;AACZ,eAAS,eAAe,QAAQ,IAAI,UAAU,mBAAmB;AAAA,IACnE,UAAE;AACA,iBAAW,KAAK;AAAA,IAClB;AAAA,EACF,GAAG,CAAC,WAAW,CAAC;AAEhB,YAAU,MAAM;AACd,QAAI,WAAW;AACb,cAAQ;AAAA,IACV;AAAA,EACF,GAAG,CAAC,SAAS,SAAS,CAAC;AAEvB,SAAO,EAAE,MAAM,SAAS,OAAO,QAAQ;AACzC;","names":[]}