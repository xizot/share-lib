{"version":3,"sources":["../../src/lib/utils.ts","../../src/components/ui/button.tsx"],"names":["cn","inputs","twMerge","clsx","buttonVariants","cva","Button","className","variant","size","asChild","props","jsx","Slot"],"mappings":"oLAGO,SAASA,CAAAA,CAAAA,GAAMC,CAAsB,CAAA,CACxC,OAAOC,OAAQC,CAAAA,IAAAA,CAAKF,CAAM,CAAC,CAC/B,CCCMG,IAAAA,CAAAA,CAAiBC,GACrB,CAAA,6bAAA,CACA,CACE,QAAU,CAAA,CACR,OAAS,CAAA,CACP,OACE,CAAA,kEAAA,CACF,YACE,6JACF,CAAA,OAAA,CACE,uIACF,CAAA,SAAA,CACE,wEACF,CAAA,KAAA,CACE,sEACF,CAAA,IAAA,CAAM,iDACR,CAAA,CACA,IAAM,CAAA,CACJ,OAAS,CAAA,+BAAA,CACT,GAAI,+CACJ,CAAA,EAAA,CAAI,sCACJ,CAAA,IAAA,CAAM,QACR,CACF,EACA,eAAiB,CAAA,CACf,OAAS,CAAA,SAAA,CACT,IAAM,CAAA,SACR,CACF,CACF,EAEA,SAASC,CAAAA,CAAO,CACd,SAAA,CAAAC,CACA,CAAA,OAAA,CAAAC,CACA,CAAA,IAAA,CAAAC,CACA,CAAA,OAAA,CAAAC,CAAU,CAAA,KAAA,CACV,GAAGC,CACL,CAAA,CAGK,CAGH,OACEC,GAHWF,CAAAA,CAAAA,CAAUG,KAAO,QAG3B,CAAA,CACC,WAAU,CAAA,QAAA,CACV,SAAWb,CAAAA,CAAAA,CAAGI,EAAe,CAAE,OAAA,CAAAI,CAAS,CAAA,IAAA,CAAAC,CAAM,CAAA,SAAA,CAAAF,CAAU,CAAC,CAAC,CAAA,CACzD,GAAGI,CAAAA,CACN,CAEJ","file":"index.mjs","sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n}\r\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"]}