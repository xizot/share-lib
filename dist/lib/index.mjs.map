{"version":3,"sources":["../../src/lib/utils.ts","../../src/lib/helpers.ts","../../src/lib/validation.ts"],"names":["cn","inputs","twMerge","clsx","formatPrice","price","currency","formatDate","date","locale","formatDateTime","generateId","slugify","text","capitalize","truncate","maxLength","debounce","func","delay","timeoutId","args","throttle","limit","inThrottle","isEmail","email","isUrl","url","omit","obj","keys","result","key","pick","ValidationError","message","errors","validateSchema","schema","data","error","z","validateSchemaOrThrow","safeValidate","err","createApiResponse","success","createSuccessResponse","createErrorResponse","code","details"],"mappings":"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","file":"index.mjs","sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n}\r\n","export function formatPrice(\r\n  price: number,\r\n  currency: 'USD' | 'EUR' | 'VND' = 'USD'\r\n): string {\r\n  const formatters = {\r\n    USD: new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }),\r\n    EUR: new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }),\r\n    VND: new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }),\r\n  };\r\n\r\n  return formatters[currency].format(price);\r\n}\r\n\r\nexport function formatDate(date: Date, locale: string = 'en-US'): string {\r\n  return new Intl.DateTimeFormat(locale, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  }).format(date);\r\n}\r\n\r\nexport function formatDateTime(date: Date, locale: string = 'en-US'): string {\r\n  return new Intl.DateTimeFormat(locale, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(date);\r\n}\r\n\r\nexport function generateId(): string {\r\n  return crypto.randomUUID();\r\n}\r\n\r\nexport function slugify(text: string): string {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\nexport function capitalize(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n}\r\n\r\nexport function truncate(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text;\r\n  return text.slice(0, maxLength - 3) + '...';\r\n}\r\n\r\nexport function debounce<T extends (...args: any[]) => void>(\r\n  func: T,\r\n  delay: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeoutId: ReturnType<typeof setTimeout>;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  };\r\n}\r\n\r\nexport function throttle<T extends (...args: any[]) => void>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n\r\nexport function isEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport function isUrl(url: string): boolean {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function omit<T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Omit<T, K> {\r\n  const result = { ...obj };\r\n  keys.forEach(key => delete result[key]);\r\n  return result;\r\n}\r\n\r\nexport function pick<T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Pick<T, K> {\r\n  const result = {} as Pick<T, K>;\r\n  keys.forEach(key => {\r\n    if (key in obj) {\r\n      result[key] = obj[key];\r\n    }\r\n  });\r\n  return result;\r\n} ","import { z } from 'zod';\r\nimport type { ApiResponse, ErrorResponse, SuccessResponse } from '../schemas/api.schema';\r\n\r\nexport class ValidationError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public errors: z.ZodError\r\n  ) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n  }\r\n}\r\n\r\nexport function validateSchema<T>(\r\n  schema: z.ZodSchema<T>,\r\n  data: unknown\r\n): { success: true; data: T } | { success: false; error: z.ZodError } {\r\n  try {\r\n    const result = schema.parse(data);\r\n    return { success: true, data: result };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { success: false, error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function validateSchemaOrThrow<T>(schema: z.ZodSchema<T>, data: unknown): T {\r\n  try {\r\n    return schema.parse(data);\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      throw new ValidationError('Validation failed', error);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function safeValidate<T>(\r\n  schema: z.ZodSchema<T>,\r\n  data: unknown\r\n): { data: T | null; errors: string[] } {\r\n  try {\r\n    const result = schema.parse(data);\r\n    return { data: result, errors: [] };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const errors = error.errors.map(err => \r\n        `${err.path.join('.')}: ${err.message}`\r\n      );\r\n      return { data: null, errors };\r\n    }\r\n    return { data: null, errors: ['Unknown validation error'] };\r\n  }\r\n}\r\n\r\nexport function createApiResponse<T = unknown>(\r\n  success: boolean,\r\n  message: string,\r\n  data?: T,\r\n  error?: { code: string; message: string; details?: unknown }\r\n): ApiResponse<T> {\r\n  return {\r\n    success,\r\n    message,\r\n    data,\r\n    error,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\nexport function createSuccessResponse<T = unknown>(\r\n  message: string,\r\n  data?: T\r\n): SuccessResponse<T> {\r\n  return {\r\n    success: true,\r\n    message,\r\n    data,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\nexport function createErrorResponse(\r\n  message: string,\r\n  code: string,\r\n  details?: unknown\r\n): ErrorResponse {\r\n  return {\r\n    success: false,\r\n    message,\r\n    error: {\r\n      code,\r\n      message,\r\n      details,\r\n    },\r\n    timestamp: new Date(),\r\n  };\r\n} "]}