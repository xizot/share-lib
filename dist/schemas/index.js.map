{"version":3,"sources":["../../src/schemas/user.schema.ts","../../src/schemas/product.schema.ts","../../src/schemas/api.schema.ts"],"names":["UserSchema","z","CreateUserSchema","UpdateUserSchema","ProductSchema","CreateProductSchema","UpdateProductSchema","ProductFilterSchema","ApiResponseSchema","PaginationSchema","PaginatedResponseSchema","ErrorResponseSchema","SuccessResponseSchema"],"mappings":"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","file":"index.js","sourcesContent":["import { z } from 'zod';\r\n\r\nexport const UserSchema = z.object({\r\n  id: z.string().uuid(),\r\n  email: z.string().email('Invalid email address'),\r\n  username: z.string().min(3, 'Username must be at least 3 characters').max(20, 'Username must be at most 20 characters'),\r\n  fullName: z.string().min(1, 'Full name is required').max(100, 'Full name must be at most 100 characters'),\r\n  avatar: z.string().url().optional(),\r\n  role: z.enum(['admin', 'user', 'moderator']).default('user'),\r\n  isActive: z.boolean().default(true),\r\n  createdAt: z.date(),\r\n  updatedAt: z.date(),\r\n});\r\n\r\nexport const CreateUserSchema = UserSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n});\r\n\r\nexport const UpdateUserSchema = UserSchema.partial().omit({\r\n  id: true,\r\n  createdAt: true,\r\n});\r\n\r\nexport type User = z.infer<typeof UserSchema>;\r\nexport type CreateUser = z.infer<typeof CreateUserSchema>;\r\nexport type UpdateUser = z.infer<typeof UpdateUserSchema>; ","import { z } from 'zod';\r\n\r\nexport const ProductSchema = z.object({\r\n  id: z.string().uuid(),\r\n  name: z.string().min(1, 'Product name is required').max(200, 'Product name must be at most 200 characters'),\r\n  description: z.string().min(10, 'Description must be at least 10 characters').max(1000, 'Description must be at most 1000 characters'),\r\n  price: z.number().positive('Price must be positive'),\r\n  currency: z.enum(['USD', 'EUR', 'VND']).default('USD'),\r\n  category: z.string().min(1, 'Category is required'),\r\n  tags: z.array(z.string()).default([]),\r\n  images: z.array(z.string().url()).default([]),\r\n  inStock: z.boolean().default(true),\r\n  stockQuantity: z.number().int().min(0, 'Stock quantity must be non-negative').default(0),\r\n  weight: z.number().positive().optional(),\r\n  dimensions: z.object({\r\n    length: z.number().positive(),\r\n    width: z.number().positive(),\r\n    height: z.number().positive(),\r\n  }).optional(),\r\n  isActive: z.boolean().default(true),\r\n  createdAt: z.date(),\r\n  updatedAt: z.date(),\r\n});\r\n\r\nexport const CreateProductSchema = ProductSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n});\r\n\r\nexport const UpdateProductSchema = ProductSchema.partial().omit({\r\n  id: true,\r\n  createdAt: true,\r\n});\r\n\r\nexport const ProductFilterSchema = z.object({\r\n  category: z.string().optional(),\r\n  minPrice: z.number().positive().optional(),\r\n  maxPrice: z.number().positive().optional(),\r\n  inStock: z.boolean().optional(),\r\n  tags: z.array(z.string()).optional(),\r\n});\r\n\r\nexport type Product = z.infer<typeof ProductSchema>;\r\nexport type CreateProduct = z.infer<typeof CreateProductSchema>;\r\nexport type UpdateProduct = z.infer<typeof UpdateProductSchema>;\r\nexport type ProductFilter = z.infer<typeof ProductFilterSchema>; ","import { z } from 'zod';\r\n\r\nexport const ApiResponseSchema = z.object({\r\n  success: z.boolean(),\r\n  message: z.string(),\r\n  data: z.unknown().optional(),\r\n  error: z.object({\r\n    code: z.string(),\r\n    message: z.string(),\r\n    details: z.unknown().optional(),\r\n  }).optional(),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport const PaginationSchema = z.object({\r\n  page: z.number().int().min(1, 'Page must be at least 1').default(1),\r\n  limit: z.number().int().min(1, 'Limit must be at least 1').max(100, 'Limit must be at most 100').default(10),\r\n  total: z.number().int().min(0, 'Total must be non-negative'),\r\n  totalPages: z.number().int().min(0, 'Total pages must be non-negative'),\r\n});\r\n\r\nexport const PaginatedResponseSchema = ApiResponseSchema.extend({\r\n  data: z.object({\r\n    items: z.array(z.unknown()),\r\n    pagination: PaginationSchema,\r\n  }),\r\n});\r\n\r\nexport const ErrorResponseSchema = z.object({\r\n  success: z.literal(false),\r\n  message: z.string(),\r\n  error: z.object({\r\n    code: z.string(),\r\n    message: z.string(),\r\n    details: z.unknown().optional(),\r\n  }),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport const SuccessResponseSchema = z.object({\r\n  success: z.literal(true),\r\n  message: z.string(),\r\n  data: z.unknown().optional(),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport type ApiResponse<T = unknown> = {\r\n  success: boolean;\r\n  message: string;\r\n  data?: T;\r\n  error?: {\r\n    code: string;\r\n    message: string;\r\n    details?: unknown;\r\n  };\r\n  timestamp: Date;\r\n};\r\n\r\nexport type PaginatedResponse<T = unknown> = {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    items: T[];\r\n    pagination: Pagination;\r\n  };\r\n  timestamp: Date;\r\n};\r\n\r\nexport type Pagination = z.infer<typeof PaginationSchema>;\r\nexport type ErrorResponse = z.infer<typeof ErrorResponseSchema>;\r\nexport type SuccessResponse<T = unknown> = Omit<z.infer<typeof SuccessResponseSchema>, 'data'> & { data?: T }; "]}