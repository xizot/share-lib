{"version":3,"sources":["../../src/schemas/common.ts"],"sourcesContent":["import { z } from \"zod\"\n\nexport const idSchema = z.string().uuid(\"Invalid ID format\")\n\nexport const paginationSchema = z.object({\n  page: z.number().min(1, \"Page must be at least 1\").default(1),\n  limit: z.number().min(1, \"Limit must be at least 1\").max(100, \"Limit cannot exceed 100\").default(10),\n  sortBy: z.string().optional(),\n  sortOrder: z.enum([\"asc\", \"desc\"]).default(\"desc\"),\n})\n\nexport const timestampSchema = z.object({\n  createdAt: z.date(),\n  updatedAt: z.date(),\n})\n\nexport const contactSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  email: z.string().email(\"Invalid email address\"),\n  phone: z.string().optional(),\n  message: z.string().min(1, \"Message is required\").max(1000, \"Message must be less than 1000 characters\"),\n})\n\nexport const addressSchema = z.object({\n  street: z.string().min(1, \"Street is required\"),\n  city: z.string().min(1, \"City is required\"),\n  state: z.string().min(1, \"State is required\"),\n  postalCode: z.string().min(1, \"Postal code is required\"),\n  country: z.string().min(1, \"Country is required\"),\n})\n\nexport const fileUploadSchema = z.object({\n  file: z.instanceof(File, { message: \"Invalid file\" }),\n  maxSize: z.number().default(5 * 1024 * 1024), // 5MB\n  allowedTypes: z.array(z.string()).default([\"image/jpeg\", \"image/png\", \"image/gif\"]),\n})\n\nexport const statusSchema = z.enum([\"active\", \"inactive\", \"pending\", \"archived\"])\n\nexport type ID = z.infer<typeof idSchema>\nexport type PaginationParams = z.infer<typeof paginationSchema>\nexport type Timestamp = z.infer<typeof timestampSchema>\nexport type ContactFormData = z.infer<typeof contactSchema>\nexport type Address = z.infer<typeof addressSchema>\nexport type FileUpload = z.infer<typeof fileUploadSchema>\nexport type Status = z.infer<typeof statusSchema> "],"mappings":";;;AAAA,SAAS,SAAS;AAEX,IAAM,WAAW,EAAE,OAAO,EAAE,KAAK,mBAAmB;AAEpD,IAAM,mBAAmB,EAAE,OAAO;AAAA,EACvC,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,yBAAyB,EAAE,QAAQ,CAAC;AAAA,EAC5D,OAAO,EAAE,OAAO,EAAE,IAAI,GAAG,0BAA0B,EAAE,IAAI,KAAK,yBAAyB,EAAE,QAAQ,EAAE;AAAA,EACnG,QAAQ,EAAE,OAAO,EAAE,SAAS;AAAA,EAC5B,WAAW,EAAE,KAAK,CAAC,OAAO,MAAM,CAAC,EAAE,QAAQ,MAAM;AACnD,CAAC;AAEM,IAAM,kBAAkB,EAAE,OAAO;AAAA,EACtC,WAAW,EAAE,KAAK;AAAA,EAClB,WAAW,EAAE,KAAK;AACpB,CAAC;AAEM,IAAM,gBAAgB,EAAE,OAAO;AAAA,EACpC,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,kBAAkB;AAAA,EAC1C,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB;AAAA,EAC/C,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,SAAS,EAAE,OAAO,EAAE,IAAI,GAAG,qBAAqB,EAAE,IAAI,KAAM,2CAA2C;AACzG,CAAC;AAEM,IAAM,gBAAgB,EAAE,OAAO;AAAA,EACpC,QAAQ,EAAE,OAAO,EAAE,IAAI,GAAG,oBAAoB;AAAA,EAC9C,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,kBAAkB;AAAA,EAC1C,OAAO,EAAE,OAAO,EAAE,IAAI,GAAG,mBAAmB;AAAA,EAC5C,YAAY,EAAE,OAAO,EAAE,IAAI,GAAG,yBAAyB;AAAA,EACvD,SAAS,EAAE,OAAO,EAAE,IAAI,GAAG,qBAAqB;AAClD,CAAC;AAEM,IAAM,mBAAmB,EAAE,OAAO;AAAA,EACvC,MAAM,EAAE,WAAW,MAAM,EAAE,SAAS,eAAe,CAAC;AAAA,EACpD,SAAS,EAAE,OAAO,EAAE,QAAQ,IAAI,OAAO,IAAI;AAAA;AAAA,EAC3C,cAAc,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,cAAc,aAAa,WAAW,CAAC;AACpF,CAAC;AAEM,IAAM,eAAe,EAAE,KAAK,CAAC,UAAU,YAAY,WAAW,UAAU,CAAC;","names":[]}