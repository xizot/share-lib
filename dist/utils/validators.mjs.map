{"version":3,"sources":["../../src/utils/validators.ts"],"sourcesContent":["export function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nexport function isValidPhoneNumber(phone: string): boolean {\n  const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]{10,}$/\n  return phoneRegex.test(phone)\n}\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport function isValidPassword(password: string, minLength: number = 6): boolean {\n  return password.length >= minLength\n}\n\nexport function isStrongPassword(password: string): boolean {\n  const hasLowerCase = /[a-z]/.test(password)\n  const hasUpperCase = /[A-Z]/.test(password)\n  const hasNumber = /\\d/.test(password)\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password)\n  const isLongEnough = password.length >= 8\n\n  return hasLowerCase && hasUpperCase && hasNumber && hasSpecialChar && isLongEnough\n}\n\nexport function isValidCreditCard(cardNumber: string): boolean {\n  const cleaned = cardNumber.replace(/\\D/g, \"\")\n  \n  if (cleaned.length < 13 || cleaned.length > 19) {\n    return false\n  }\n\n  let sum = 0\n  let isEven = false\n  \n  for (let i = cleaned.length - 1; i >= 0; i--) {\n    let digit = parseInt(cleaned.charAt(i), 10)\n    \n    if (isEven) {\n      digit *= 2\n      if (digit > 9) {\n        digit -= 9\n      }\n    }\n    \n    sum += digit\n    isEven = !isEven\n  }\n  \n  return sum % 10 === 0\n}\n\nexport function isValidPostalCode(postalCode: string, country: string = \"US\"): boolean {\n  const patterns = {\n    US: /^\\d{5}(-\\d{4})?$/,\n    CA: /^[A-Za-z]\\d[A-Za-z] \\d[A-Za-z]\\d$/,\n    UK: /^[A-Za-z]{1,2}\\d[A-Za-z\\d]? \\d[A-Za-z]{2}$/,\n  }\n  \n  const pattern = patterns[country as keyof typeof patterns]\n  return pattern ? pattern.test(postalCode) : true\n}\n\nexport function isEmpty(value: unknown): boolean {\n  if (value === null || value === undefined) return true\n  if (typeof value === \"string\") return value.trim().length === 0\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === \"object\") return Object.keys(value).length === 0\n  return false\n} "],"mappings":";;;AAAO,SAAS,aAAa,OAAwB;AACnD,QAAM,aAAa;AACnB,SAAO,WAAW,KAAK,KAAK;AAC9B;AAEO,SAAS,mBAAmB,OAAwB;AACzD,QAAM,aAAa;AACnB,SAAO,WAAW,KAAK,KAAK;AAC9B;AAEO,SAAS,WAAW,KAAsB;AAC/C,MAAI;AACF,QAAI,IAAI,GAAG;AACX,WAAO;AAAA,EACT,QAAQ;AACN,WAAO;AAAA,EACT;AACF;AAEO,SAAS,gBAAgB,UAAkB,YAAoB,GAAY;AAChF,SAAO,SAAS,UAAU;AAC5B;AAEO,SAAS,iBAAiB,UAA2B;AAC1D,QAAM,eAAe,QAAQ,KAAK,QAAQ;AAC1C,QAAM,eAAe,QAAQ,KAAK,QAAQ;AAC1C,QAAM,YAAY,KAAK,KAAK,QAAQ;AACpC,QAAM,iBAAiB,yBAAyB,KAAK,QAAQ;AAC7D,QAAM,eAAe,SAAS,UAAU;AAExC,SAAO,gBAAgB,gBAAgB,aAAa,kBAAkB;AACxE;AAEO,SAAS,kBAAkB,YAA6B;AAC7D,QAAM,UAAU,WAAW,QAAQ,OAAO,EAAE;AAE5C,MAAI,QAAQ,SAAS,MAAM,QAAQ,SAAS,IAAI;AAC9C,WAAO;AAAA,EACT;AAEA,MAAI,MAAM;AACV,MAAI,SAAS;AAEb,WAAS,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,QAAI,QAAQ,SAAS,QAAQ,OAAO,CAAC,GAAG,EAAE;AAE1C,QAAI,QAAQ;AACV,eAAS;AACT,UAAI,QAAQ,GAAG;AACb,iBAAS;AAAA,MACX;AAAA,IACF;AAEA,WAAO;AACP,aAAS,CAAC;AAAA,EACZ;AAEA,SAAO,MAAM,OAAO;AACtB;AAEO,SAAS,kBAAkB,YAAoB,UAAkB,MAAe;AACrF,QAAM,WAAW;AAAA,IACf,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,QAAM,UAAU,SAAS,OAAgC;AACzD,SAAO,UAAU,QAAQ,KAAK,UAAU,IAAI;AAC9C;AAEO,SAAS,QAAQ,OAAyB;AAC/C,MAAI,UAAU,QAAQ,UAAU,OAAW,QAAO;AAClD,MAAI,OAAO,UAAU,SAAU,QAAO,MAAM,KAAK,EAAE,WAAW;AAC9D,MAAI,MAAM,QAAQ,KAAK,EAAG,QAAO,MAAM,WAAW;AAClD,MAAI,OAAO,UAAU,SAAU,QAAO,OAAO,KAAK,KAAK,EAAE,WAAW;AACpE,SAAO;AACT;","names":[]}