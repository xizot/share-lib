{"version":3,"sources":["../../src/utils/index.ts","../../src/utils/cn.ts","../../src/utils/formatters.ts","../../src/utils/validators.ts"],"sourcesContent":["export { cn } from \"./cn\"\nexport * from \"./formatters\"\nexport * from \"./validators\" ","import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n} ","export function formatCurrency(\n  amount: number,\n  currency: string = \"USD\",\n  locale: string = \"en-US\"\n): string {\n  return new Intl.NumberFormat(locale, {\n    style: \"currency\",\n    currency,\n  }).format(amount)\n}\n\nexport function formatDate(\n  date: Date | string,\n  options: Intl.DateTimeFormatOptions = {},\n  locale: string = \"en-US\"\n): string {\n  const dateObj = typeof date === \"string\" ? new Date(date) : date\n  return new Intl.DateTimeFormat(locale, {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    ...options,\n  }).format(dateObj)\n}\n\nexport function formatRelativeTime(date: Date | string): string {\n  const now = new Date()\n  const dateObj = typeof date === \"string\" ? new Date(date) : date\n  const diffInSeconds = Math.floor((now.getTime() - dateObj.getTime()) / 1000)\n\n  if (diffInSeconds < 60) return \"just now\"\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`\n  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} days ago`\n  \n  return formatDate(dateObj)\n}\n\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return \"0 Bytes\"\n  \n  const k = 1024\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"]\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i]\n}\n\nexport function formatPhoneNumber(phoneNumber: string): string {\n  const cleaned = phoneNumber.replace(/\\D/g, \"\")\n  const match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\n  \n  if (match) {\n    return `(${match[1]}) ${match[2]}-${match[3]}`\n  }\n  \n  return phoneNumber\n}\n\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text\n  return text.slice(0, maxLength) + \"...\"\n}\n\nexport function capitalizeFirst(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\n}\n\nexport function formatInitials(firstName: string, lastName: string): string {\n  return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase()\n} ","export function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nexport function isValidPhoneNumber(phone: string): boolean {\n  const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]{10,}$/\n  return phoneRegex.test(phone)\n}\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url)\n    return true\n  } catch {\n    return false\n  }\n}\n\nexport function isValidPassword(password: string, minLength: number = 6): boolean {\n  return password.length >= minLength\n}\n\nexport function isStrongPassword(password: string): boolean {\n  const hasLowerCase = /[a-z]/.test(password)\n  const hasUpperCase = /[A-Z]/.test(password)\n  const hasNumber = /\\d/.test(password)\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password)\n  const isLongEnough = password.length >= 8\n\n  return hasLowerCase && hasUpperCase && hasNumber && hasSpecialChar && isLongEnough\n}\n\nexport function isValidCreditCard(cardNumber: string): boolean {\n  const cleaned = cardNumber.replace(/\\D/g, \"\")\n  \n  if (cleaned.length < 13 || cleaned.length > 19) {\n    return false\n  }\n\n  let sum = 0\n  let isEven = false\n  \n  for (let i = cleaned.length - 1; i >= 0; i--) {\n    let digit = parseInt(cleaned.charAt(i), 10)\n    \n    if (isEven) {\n      digit *= 2\n      if (digit > 9) {\n        digit -= 9\n      }\n    }\n    \n    sum += digit\n    isEven = !isEven\n  }\n  \n  return sum % 10 === 0\n}\n\nexport function isValidPostalCode(postalCode: string, country: string = \"US\"): boolean {\n  const patterns = {\n    US: /^\\d{5}(-\\d{4})?$/,\n    CA: /^[A-Za-z]\\d[A-Za-z] \\d[A-Za-z]\\d$/,\n    UK: /^[A-Za-z]{1,2}\\d[A-Za-z\\d]? \\d[A-Za-z]{2}$/,\n  }\n  \n  const pattern = patterns[country as keyof typeof patterns]\n  return pattern ? pattern.test(postalCode) : true\n}\n\nexport function isEmpty(value: unknown): boolean {\n  if (value === null || value === undefined) return true\n  if (typeof value === \"string\") return value.trim().length === 0\n  if (Array.isArray(value)) return value.length === 0\n  if (typeof value === \"object\") return Object.keys(value).length === 0\n  return false\n} "],"mappings":"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","names":[]}