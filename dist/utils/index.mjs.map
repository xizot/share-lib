{"version":3,"sources":["../../src/utils/index.ts"],"names":[],"mappings":"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","file":"index.mjs","sourcesContent":["// Date utilities\r\nexport const formatDate = (date: Date | string, format: 'short' | 'long' | 'time' = 'short'): string => {\r\n  const d = new Date(date)\r\n  \r\n  switch (format) {\r\n    case 'short':\r\n      return d.toLocaleDateString()\r\n    case 'long':\r\n      return d.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n      })\r\n    case 'time':\r\n      return d.toLocaleTimeString()\r\n    default:\r\n      return d.toLocaleDateString()\r\n  }\r\n}\r\n\r\nexport const timeAgo = (date: Date | string): string => {\r\n  const now = new Date()\r\n  const past = new Date(date)\r\n  const diffInSeconds = Math.floor((now.getTime() - past.getTime()) / 1000)\r\n  \r\n  if (diffInSeconds < 60) return 'just now'\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`\r\n  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}d ago`\r\n  if (diffInSeconds < 31536000) return `${Math.floor(diffInSeconds / 2592000)}mo ago`\r\n  return `${Math.floor(diffInSeconds / 31536000)}y ago`\r\n}\r\n\r\n// String utilities\r\nexport const capitalize = (str: string): string => {\r\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()\r\n}\r\n\r\nexport const slugify = (str: string): string => {\r\n  return str\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '')\r\n}\r\n\r\nexport const truncate = (str: string, length: number): string => {\r\n  if (str.length <= length) return str\r\n  return str.slice(0, length) + '...'\r\n}\r\n\r\n// Array utilities\r\nexport const unique = <T>(array: T[]): T[] => {\r\n  return [...new Set(array)]\r\n}\r\n\r\nexport const groupBy = <T, K extends keyof T>(array: T[], key: K): Record<string, T[]> => {\r\n  return array.reduce((groups, item) => {\r\n    const groupKey = String(item[key])\r\n    if (!groups[groupKey]) {\r\n      groups[groupKey] = []\r\n    }\r\n    groups[groupKey].push(item)\r\n    return groups\r\n  }, {} as Record<string, T[]>)\r\n}\r\n\r\nexport const sortBy = <T>(array: T[], key: keyof T, direction: 'asc' | 'desc' = 'asc'): T[] => {\r\n  return [...array].sort((a, b) => {\r\n    const aVal = a[key]\r\n    const bVal = b[key]\r\n    \r\n    if (aVal < bVal) return direction === 'asc' ? -1 : 1\r\n    if (aVal > bVal) return direction === 'asc' ? 1 : -1\r\n    return 0\r\n  })\r\n}\r\n\r\n// Object utilities\r\nexport const omit = <T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Omit<T, K> => {\r\n  const result = { ...obj }\r\n  keys.forEach(key => delete result[key])\r\n  return result\r\n}\r\n\r\nexport const pick = <T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Pick<T, K> => {\r\n  const result = {} as Pick<T, K>\r\n  keys.forEach(key => {\r\n    if (key in obj) {\r\n      result[key] = obj[key]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n// Validation utilities\r\nexport const isEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  return emailRegex.test(email)\r\n}\r\n\r\nexport const isUrl = (url: string): boolean => {\r\n  try {\r\n    new URL(url)\r\n    return true\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const isPhoneNumber = (phone: string): boolean => {\r\n  const phoneRegex = /^\\+?[\\d\\s\\-\\(\\)]+$/\r\n  return phoneRegex.test(phone) && phone.replace(/\\D/g, '').length >= 10\r\n}\r\n\r\n// Async utilities\r\nexport const delay = (ms: number): Promise<void> => {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\nexport const debounce = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void => {\r\n  let timeout: ReturnType<typeof setTimeout> | null = null\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (timeout) clearTimeout(timeout)\r\n    timeout = setTimeout(() => func(...args), wait)\r\n  }\r\n}\r\n\r\nexport const throttle = <T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void => {\r\n  let inThrottle: boolean = false\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\n// Local storage utilities\r\nexport const storage = {\r\n  get: <T>(key: string, defaultValue?: T): T | null => {\r\n    try {\r\n      const item = localStorage.getItem(key)\r\n      return item ? JSON.parse(item) : defaultValue ?? null\r\n    } catch {\r\n      return defaultValue ?? null\r\n    }\r\n  },\r\n  \r\n  set: <T>(key: string, value: T): void => {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value))\r\n    } catch (error) {\r\n      console.error('Failed to save to localStorage:', error)\r\n    }\r\n  },\r\n  \r\n  remove: (key: string): void => {\r\n    try {\r\n      localStorage.removeItem(key)\r\n    } catch (error) {\r\n      console.error('Failed to remove from localStorage:', error)\r\n    }\r\n  },\r\n  \r\n  clear: (): void => {\r\n    try {\r\n      localStorage.clear()\r\n    } catch (error) {\r\n      console.error('Failed to clear localStorage:', error)\r\n    }\r\n  }\r\n} "]}