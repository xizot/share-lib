{"version":3,"sources":["../src/schemas/user.schema.ts","../src/schemas/product.schema.ts","../src/schemas/api.schema.ts","../src/lib/utils.ts","../src/lib/helpers.ts","../src/lib/validation.ts","../src/components/ui/button.tsx"],"names":["z"],"mappings":";;;;;;;;AAEa,IAAA,UAAA,GAAa,EAAE,MAAO,CAAA;AAAA,EACjC,EAAI,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,IAAK,EAAA;AAAA,EACpB,KAAO,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,MAAM,uBAAuB,CAAA;AAAA,EAC/C,QAAA,EAAU,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,CAAI,GAAG,wCAAwC,CAAA,CAAE,GAAI,CAAA,EAAA,EAAI,wCAAwC,CAAA;AAAA,EACtH,QAAA,EAAU,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,CAAI,GAAG,uBAAuB,CAAA,CAAE,GAAI,CAAA,GAAA,EAAK,0CAA0C,CAAA;AAAA,EACxG,QAAQ,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,GAAM,QAAS,EAAA;AAAA,EAClC,IAAA,EAAM,CAAE,CAAA,IAAA,CAAK,CAAC,OAAA,EAAS,QAAQ,WAAW,CAAC,CAAE,CAAA,OAAA,CAAQ,MAAM,CAAA;AAAA,EAC3D,QAAU,EAAA,CAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,IAAI,CAAA;AAAA,EAClC,SAAA,EAAW,EAAE,IAAK,EAAA;AAAA,EAClB,SAAA,EAAW,EAAE,IAAK;AACpB,CAAC;AAEY,IAAA,gBAAA,GAAmB,WAAW,IAAK,CAAA;AAAA,EAC9C,EAAI,EAAA,IAAA;AAAA,EACJ,SAAW,EAAA,IAAA;AAAA,EACX,SAAW,EAAA;AACb,CAAC;AAEM,IAAM,gBAAmB,GAAA,UAAA,CAAW,OAAQ,EAAA,CAAE,IAAK,CAAA;AAAA,EACxD,EAAI,EAAA,IAAA;AAAA,EACJ,SAAW,EAAA;AACb,CAAC;ACrBY,IAAA,aAAA,GAAgBA,EAAE,MAAO,CAAA;AAAA,EACpC,EAAIA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,IAAK,EAAA;AAAA,EACpB,IAAA,EAAMA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,CAAI,GAAG,0BAA0B,CAAA,CAAE,GAAI,CAAA,GAAA,EAAK,6CAA6C,CAAA;AAAA,EAC1G,WAAA,EAAaA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,CAAI,IAAI,4CAA4C,CAAA,CAAE,GAAI,CAAA,GAAA,EAAM,6CAA6C,CAAA;AAAA,EACrI,KAAOA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,SAAS,wBAAwB,CAAA;AAAA,EACnD,QAAA,EAAUA,CAAE,CAAA,IAAA,CAAK,CAAC,KAAA,EAAO,OAAO,KAAK,CAAC,CAAE,CAAA,OAAA,CAAQ,KAAK,CAAA;AAAA,EACrD,UAAUA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,CAAI,GAAG,sBAAsB,CAAA;AAAA,EAClD,IAAA,EAAMA,EAAE,KAAMA,CAAAA,CAAAA,CAAE,QAAQ,CAAA,CAAE,OAAQ,CAAA,EAAE,CAAA;AAAA,EACpC,MAAA,EAAQA,CAAE,CAAA,KAAA,CAAMA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,EAAK,CAAA,CAAE,OAAQ,CAAA,EAAE,CAAA;AAAA,EAC5C,OAASA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,IAAI,CAAA;AAAA,EACjC,aAAA,EAAeA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,EAAM,CAAA,GAAA,CAAI,CAAG,EAAA,qCAAqC,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,EACvF,QAAQA,CAAE,CAAA,MAAA,EAAS,CAAA,QAAA,GAAW,QAAS,EAAA;AAAA,EACvC,UAAA,EAAYA,EAAE,MAAO,CAAA;AAAA,IACnB,MAAQA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,QAAS,EAAA;AAAA,IAC5B,KAAOA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,QAAS,EAAA;AAAA,IAC3B,MAAQA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,QAAS;AAAA,GAC7B,EAAE,QAAS,EAAA;AAAA,EACZ,QAAUA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAQ,IAAI,CAAA;AAAA,EAClC,SAAA,EAAWA,EAAE,IAAK,EAAA;AAAA,EAClB,SAAA,EAAWA,EAAE,IAAK;AACpB,CAAC;AAEY,IAAA,mBAAA,GAAsB,cAAc,IAAK,CAAA;AAAA,EACpD,EAAI,EAAA,IAAA;AAAA,EACJ,SAAW,EAAA,IAAA;AAAA,EACX,SAAW,EAAA;AACb,CAAC;AAEM,IAAM,mBAAsB,GAAA,aAAA,CAAc,OAAQ,EAAA,CAAE,IAAK,CAAA;AAAA,EAC9D,EAAI,EAAA,IAAA;AAAA,EACJ,SAAW,EAAA;AACb,CAAC;AAEY,IAAA,mBAAA,GAAsBA,EAAE,MAAO,CAAA;AAAA,EAC1C,QAAUA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,QAAS,EAAA;AAAA,EAC9B,UAAUA,CAAE,CAAA,MAAA,EAAS,CAAA,QAAA,GAAW,QAAS,EAAA;AAAA,EACzC,UAAUA,CAAE,CAAA,MAAA,EAAS,CAAA,QAAA,GAAW,QAAS,EAAA;AAAA,EACzC,OAASA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,EAC9B,MAAMA,CAAE,CAAA,KAAA,CAAMA,EAAE,MAAO,EAAC,EAAE,QAAS;AACrC,CAAC;ACvCY,IAAA,iBAAA,GAAoBA,EAAE,MAAO,CAAA;AAAA,EACxC,OAAA,EAASA,EAAE,OAAQ,EAAA;AAAA,EACnB,OAAA,EAASA,EAAE,MAAO,EAAA;AAAA,EAClB,IAAMA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,EAC3B,KAAA,EAAOA,EAAE,MAAO,CAAA;AAAA,IACd,IAAA,EAAMA,EAAE,MAAO,EAAA;AAAA,IACf,OAAA,EAASA,EAAE,MAAO,EAAA;AAAA,IAClB,OAASA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAS;AAAA,GAC/B,EAAE,QAAS,EAAA;AAAA,EACZ,SAAA,EAAWA,EAAE,IAAK;AACpB,CAAC;AAEY,IAAA,gBAAA,GAAmBA,EAAE,MAAO,CAAA;AAAA,EACvC,IAAA,EAAMA,CAAE,CAAA,MAAA,EAAS,CAAA,GAAA,EAAM,CAAA,GAAA,CAAI,CAAG,EAAA,yBAAyB,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,EAClE,KAAOA,EAAAA,CAAAA,CAAE,MAAO,EAAA,CAAE,KAAM,CAAA,GAAA,CAAI,CAAG,EAAA,0BAA0B,EAAE,GAAI,CAAA,GAAA,EAAK,2BAA2B,CAAA,CAAE,QAAQ,EAAE,CAAA;AAAA,EAC3G,KAAA,EAAOA,EAAE,MAAO,EAAA,CAAE,KAAM,CAAA,GAAA,CAAI,GAAG,4BAA4B,CAAA;AAAA,EAC3D,UAAA,EAAYA,EAAE,MAAO,EAAA,CAAE,KAAM,CAAA,GAAA,CAAI,GAAG,kCAAkC;AACxE,CAAC;AAEY,IAAA,uBAAA,GAA0B,kBAAkB,MAAO,CAAA;AAAA,EAC9D,IAAA,EAAMA,EAAE,MAAO,CAAA;AAAA,IACb,KAAOA,EAAAA,CAAAA,CAAE,KAAMA,CAAAA,CAAAA,CAAE,SAAS,CAAA;AAAA,IAC1B,UAAY,EAAA;AAAA,GACb;AACH,CAAC;AAEY,IAAA,mBAAA,GAAsBA,EAAE,MAAO,CAAA;AAAA,EAC1C,OAAA,EAASA,CAAE,CAAA,OAAA,CAAQ,KAAK,CAAA;AAAA,EACxB,OAAA,EAASA,EAAE,MAAO,EAAA;AAAA,EAClB,KAAA,EAAOA,EAAE,MAAO,CAAA;AAAA,IACd,IAAA,EAAMA,EAAE,MAAO,EAAA;AAAA,IACf,OAAA,EAASA,EAAE,MAAO,EAAA;AAAA,IAClB,OAASA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAS;AAAA,GAC/B,CAAA;AAAA,EACD,SAAA,EAAWA,EAAE,IAAK;AACpB,CAAC;AAEY,IAAA,qBAAA,GAAwBA,EAAE,MAAO,CAAA;AAAA,EAC5C,OAAA,EAASA,CAAE,CAAA,OAAA,CAAQ,IAAI,CAAA;AAAA,EACvB,OAAA,EAASA,EAAE,MAAO,EAAA;AAAA,EAClB,IAAMA,EAAAA,CAAAA,CAAE,OAAQ,EAAA,CAAE,QAAS,EAAA;AAAA,EAC3B,SAAA,EAAWA,EAAE,IAAK;AACpB,CAAC;ACzCM,SAAS,MAAM,MAAsB,EAAA;AACxC,EAAO,OAAA,OAAA,CAAQ,IAAK,CAAA,MAAM,CAAC,CAAA;AAC/B;;;ACLO,SAAS,WAAA,CACd,KACA,EAAA,QAAA,GAAkC,KAC1B,EAAA;AACR,EAAA,MAAM,UAAa,GAAA;AAAA,IACjB,GAAA,EAAK,IAAI,IAAA,CAAK,YAAa,CAAA,OAAA,EAAS,EAAE,KAAO,EAAA,UAAA,EAAY,QAAU,EAAA,KAAA,EAAO,CAAA;AAAA,IAC1E,GAAA,EAAK,IAAI,IAAA,CAAK,YAAa,CAAA,OAAA,EAAS,EAAE,KAAO,EAAA,UAAA,EAAY,QAAU,EAAA,KAAA,EAAO,CAAA;AAAA,IAC1E,GAAA,EAAK,IAAI,IAAA,CAAK,YAAa,CAAA,OAAA,EAAS,EAAE,KAAO,EAAA,UAAA,EAAY,QAAU,EAAA,KAAA,EAAO;AAAA,GAC5E;AAEA,EAAA,OAAO,UAAW,CAAA,QAAQ,CAAE,CAAA,MAAA,CAAO,KAAK,CAAA;AAC1C;AAEO,SAAS,UAAA,CAAW,IAAY,EAAA,MAAA,GAAiB,OAAiB,EAAA;AACvE,EAAO,OAAA,IAAI,IAAK,CAAA,cAAA,CAAe,MAAQ,EAAA;AAAA,IACrC,IAAM,EAAA,SAAA;AAAA,IACN,KAAO,EAAA,MAAA;AAAA,IACP,GAAK,EAAA;AAAA,GACN,CAAE,CAAA,MAAA,CAAO,IAAI,CAAA;AAChB;AAEO,SAAS,cAAA,CAAe,IAAY,EAAA,MAAA,GAAiB,OAAiB,EAAA;AAC3E,EAAO,OAAA,IAAI,IAAK,CAAA,cAAA,CAAe,MAAQ,EAAA;AAAA,IACrC,IAAM,EAAA,SAAA;AAAA,IACN,KAAO,EAAA,OAAA;AAAA,IACP,GAAK,EAAA,SAAA;AAAA,IACL,IAAM,EAAA,SAAA;AAAA,IACN,MAAQ,EAAA;AAAA,GACT,CAAE,CAAA,MAAA,CAAO,IAAI,CAAA;AAChB;AAEO,SAAS,UAAqB,GAAA;AACnC,EAAA,OAAO,OAAO,UAAW,EAAA;AAC3B;AAEO,SAAS,QAAQ,IAAsB,EAAA;AAC5C,EAAA,OAAO,IACJ,CAAA,WAAA,EACA,CAAA,OAAA,CAAQ,WAAa,EAAA,EAAE,CACvB,CAAA,OAAA,CAAQ,UAAY,EAAA,GAAG,CACvB,CAAA,OAAA,CAAQ,YAAY,EAAE,CAAA;AAC3B;AAEO,SAAS,WAAW,IAAsB,EAAA;AAC/C,EAAO,OAAA,IAAA,CAAK,MAAO,CAAA,CAAC,CAAE,CAAA,WAAA,KAAgB,IAAK,CAAA,KAAA,CAAM,CAAC,CAAA,CAAE,WAAY,EAAA;AAClE;AAEO,SAAS,QAAA,CAAS,MAAc,SAA2B,EAAA;AAChE,EAAI,IAAA,IAAA,CAAK,MAAU,IAAA,SAAA,EAAkB,OAAA,IAAA;AACrC,EAAA,OAAO,IAAK,CAAA,KAAA,CAAM,CAAG,EAAA,SAAA,GAAY,CAAC,CAAI,GAAA,KAAA;AACxC;AAEO,SAAS,QAAA,CACd,MACA,KACkC,EAAA;AAClC,EAAI,IAAA,SAAA;AAEJ,EAAA,OAAO,IAAI,IAAwB,KAAA;AACjC,IAAA,YAAA,CAAa,SAAS,CAAA;AACtB,IAAA,SAAA,GAAY,WAAW,MAAM,IAAA,CAAK,GAAG,IAAI,GAAG,KAAK,CAAA;AAAA,GACnD;AACF;AAEO,SAAS,QAAA,CACd,MACA,KACkC,EAAA;AAClC,EAAI,IAAA,UAAA;AAEJ,EAAA,OAAO,IAAI,IAAwB,KAAA;AACjC,IAAA,IAAI,CAAC,UAAY,EAAA;AACf,MAAA,IAAA,CAAK,GAAG,IAAI,CAAA;AACZ,MAAa,UAAA,GAAA,IAAA;AACb,MAAW,UAAA,CAAA,MAAM,UAAa,GAAA,KAAA,EAAO,KAAK,CAAA;AAAA;AAC5C,GACF;AACF;AAEO,SAAS,QAAQ,KAAwB,EAAA;AAC9C,EAAA,MAAM,UAAa,GAAA,4BAAA;AACnB,EAAO,OAAA,UAAA,CAAW,KAAK,KAAK,CAAA;AAC9B;AAEO,SAAS,MAAM,GAAsB,EAAA;AAC1C,EAAI,IAAA;AACF,IAAA,IAAI,IAAI,GAAG,CAAA;AACX,IAAO,OAAA,IAAA;AAAA,GACD,CAAA,MAAA;AACN,IAAO,OAAA,KAAA;AAAA;AAEX;AAEO,SAAS,IAAA,CACd,KACA,IACY,EAAA;AACZ,EAAM,MAAA,MAAA,GAAS,EAAE,GAAG,GAAI,EAAA;AACxB,EAAA,IAAA,CAAK,OAAQ,CAAA,CAAA,GAAA,KAAO,OAAO,MAAA,CAAO,GAAG,CAAC,CAAA;AACtC,EAAO,OAAA,MAAA;AACT;AAEO,SAAS,IAAA,CACd,KACA,IACY,EAAA;AACZ,EAAA,MAAM,SAAS,EAAC;AAChB,EAAA,IAAA,CAAK,QAAQ,CAAO,GAAA,KAAA;AAClB,IAAA,IAAI,OAAO,GAAK,EAAA;AACd,MAAO,MAAA,CAAA,GAAG,CAAI,GAAA,GAAA,CAAI,GAAG,CAAA;AAAA;AACvB,GACD,CAAA;AACD,EAAO,OAAA,MAAA;AACT;AC9Ga,IAAA,eAAA,GAAN,cAA8B,KAAM,CAAA;AAAA,EACzC,WAAA,CACE,SACO,MACP,EAAA;AACA,IAAA,KAAA,CAAM,OAAO,CAAA;AAFN,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAGP,IAAA,IAAA,CAAK,IAAO,GAAA,iBAAA;AAAA;AAEhB;AAEO,SAAS,cAAA,CACd,QACA,IACoE,EAAA;AACpE,EAAI,IAAA;AACF,IAAM,MAAA,MAAA,GAAS,MAAO,CAAA,KAAA,CAAM,IAAI,CAAA;AAChC,IAAA,OAAO,EAAE,OAAA,EAAS,IAAM,EAAA,IAAA,EAAM,MAAO,EAAA;AAAA,WAC9B,KAAO,EAAA;AACd,IAAI,IAAA,KAAA,YAAiBA,EAAE,QAAU,EAAA;AAC/B,MAAO,OAAA,EAAE,OAAS,EAAA,KAAA,EAAO,KAAM,EAAA;AAAA;AAEjC,IAAM,MAAA,KAAA;AAAA;AAEV;AAEO,SAAS,qBAAA,CAAyB,QAAwB,IAAkB,EAAA;AACjF,EAAI,IAAA;AACF,IAAO,OAAA,MAAA,CAAO,MAAM,IAAI,CAAA;AAAA,WACjB,KAAO,EAAA;AACd,IAAI,IAAA,KAAA,YAAiBA,EAAE,QAAU,EAAA;AAC/B,MAAM,MAAA,IAAI,eAAgB,CAAA,mBAAA,EAAqB,KAAK,CAAA;AAAA;AAEtD,IAAM,MAAA,KAAA;AAAA;AAEV;AAEO,SAAS,YAAA,CACd,QACA,IACsC,EAAA;AACtC,EAAI,IAAA;AACF,IAAM,MAAA,MAAA,GAAS,MAAO,CAAA,KAAA,CAAM,IAAI,CAAA;AAChC,IAAA,OAAO,EAAE,IAAA,EAAM,MAAQ,EAAA,MAAA,EAAQ,EAAG,EAAA;AAAA,WAC3B,KAAO,EAAA;AACd,IAAI,IAAA,KAAA,YAAiBA,EAAE,QAAU,EAAA;AAC/B,MAAM,MAAA,MAAA,GAAS,MAAM,MAAO,CAAA,GAAA;AAAA,QAAI,CAAA,GAAA,KAC9B,GAAG,GAAI,CAAA,IAAA,CAAK,KAAK,GAAG,CAAC,CAAK,EAAA,EAAA,GAAA,CAAI,OAAO,CAAA;AAAA,OACvC;AACA,MAAO,OAAA,EAAE,IAAM,EAAA,IAAA,EAAM,MAAO,EAAA;AAAA;AAE9B,IAAA,OAAO,EAAE,IAAM,EAAA,IAAA,EAAM,MAAQ,EAAA,CAAC,0BAA0B,CAAE,EAAA;AAAA;AAE9D;AAEO,SAAS,iBACd,CAAA,OAAA,EACA,OACA,EAAA,IAAA,EACA,KACgB,EAAA;AAChB,EAAO,OAAA;AAAA,IACL,OAAA;AAAA,IACA,OAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,SAAA,sBAAe,IAAK;AAAA,GACtB;AACF;AAEO,SAAS,qBAAA,CACd,SACA,IACoB,EAAA;AACpB,EAAO,OAAA;AAAA,IACL,OAAS,EAAA,IAAA;AAAA,IACT,OAAA;AAAA,IACA,IAAA;AAAA,IACA,SAAA,sBAAe,IAAK;AAAA,GACtB;AACF;AAEO,SAAS,mBAAA,CACd,OACA,EAAA,IAAA,EACA,OACe,EAAA;AACf,EAAO,OAAA;AAAA,IACL,OAAS,EAAA,KAAA;AAAA,IACT,OAAA;AAAA,IACA,KAAO,EAAA;AAAA,MACL,IAAA;AAAA,MACA,OAAA;AAAA,MACA;AAAA,KACF;AAAA,IACA,SAAA,sBAAe,IAAK;AAAA,GACtB;AACF;AC7FA,IAAM,cAAiB,GAAA,GAAA;AAAA,EACrB,6bAAA;AAAA,EACA;AAAA,IACE,QAAU,EAAA;AAAA,MACR,OAAS,EAAA;AAAA,QACP,OACE,EAAA,kEAAA;AAAA,QACF,WACE,EAAA,6JAAA;AAAA,QACF,OACE,EAAA,uIAAA;AAAA,QACF,SACE,EAAA,wEAAA;AAAA,QACF,KACE,EAAA,sEAAA;AAAA,QACF,IAAM,EAAA;AAAA,OACR;AAAA,MACA,IAAM,EAAA;AAAA,QACJ,OAAS,EAAA,+BAAA;AAAA,QACT,EAAI,EAAA,+CAAA;AAAA,QACJ,EAAI,EAAA,sCAAA;AAAA,QACJ,IAAM,EAAA;AAAA;AACR,KACF;AAAA,IACA,eAAiB,EAAA;AAAA,MACf,OAAS,EAAA,SAAA;AAAA,MACT,IAAM,EAAA;AAAA;AACR;AAEJ;AAEA,SAAS,MAAO,CAAA;AAAA,EACd,SAAA;AAAA,EACA,OAAA;AAAA,EACA,IAAA;AAAA,EACA,OAAU,GAAA,KAAA;AAAA,EACV,GAAG;AACL,CAGK,EAAA;AACH,EAAM,MAAA,IAAA,GAAO,UAAU,IAAO,GAAA,QAAA;AAE9B,EACE,uBAAA,GAAA;AAAA,IAAC,IAAA;AAAA,IAAA;AAAA,MACC,WAAU,EAAA,QAAA;AAAA,MACV,SAAA,EAAW,GAAG,cAAe,CAAA,EAAE,SAAS,IAAM,EAAA,SAAA,EAAW,CAAC,CAAA;AAAA,MACzD,GAAG;AAAA;AAAA,GACN;AAEJ","file":"index.mjs","sourcesContent":["import { z } from 'zod';\r\n\r\nexport const UserSchema = z.object({\r\n  id: z.string().uuid(),\r\n  email: z.string().email('Invalid email address'),\r\n  username: z.string().min(3, 'Username must be at least 3 characters').max(20, 'Username must be at most 20 characters'),\r\n  fullName: z.string().min(1, 'Full name is required').max(100, 'Full name must be at most 100 characters'),\r\n  avatar: z.string().url().optional(),\r\n  role: z.enum(['admin', 'user', 'moderator']).default('user'),\r\n  isActive: z.boolean().default(true),\r\n  createdAt: z.date(),\r\n  updatedAt: z.date(),\r\n});\r\n\r\nexport const CreateUserSchema = UserSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n});\r\n\r\nexport const UpdateUserSchema = UserSchema.partial().omit({\r\n  id: true,\r\n  createdAt: true,\r\n});\r\n\r\nexport type User = z.infer<typeof UserSchema>;\r\nexport type CreateUser = z.infer<typeof CreateUserSchema>;\r\nexport type UpdateUser = z.infer<typeof UpdateUserSchema>; ","import { z } from 'zod';\r\n\r\nexport const ProductSchema = z.object({\r\n  id: z.string().uuid(),\r\n  name: z.string().min(1, 'Product name is required').max(200, 'Product name must be at most 200 characters'),\r\n  description: z.string().min(10, 'Description must be at least 10 characters').max(1000, 'Description must be at most 1000 characters'),\r\n  price: z.number().positive('Price must be positive'),\r\n  currency: z.enum(['USD', 'EUR', 'VND']).default('USD'),\r\n  category: z.string().min(1, 'Category is required'),\r\n  tags: z.array(z.string()).default([]),\r\n  images: z.array(z.string().url()).default([]),\r\n  inStock: z.boolean().default(true),\r\n  stockQuantity: z.number().int().min(0, 'Stock quantity must be non-negative').default(0),\r\n  weight: z.number().positive().optional(),\r\n  dimensions: z.object({\r\n    length: z.number().positive(),\r\n    width: z.number().positive(),\r\n    height: z.number().positive(),\r\n  }).optional(),\r\n  isActive: z.boolean().default(true),\r\n  createdAt: z.date(),\r\n  updatedAt: z.date(),\r\n});\r\n\r\nexport const CreateProductSchema = ProductSchema.omit({\r\n  id: true,\r\n  createdAt: true,\r\n  updatedAt: true,\r\n});\r\n\r\nexport const UpdateProductSchema = ProductSchema.partial().omit({\r\n  id: true,\r\n  createdAt: true,\r\n});\r\n\r\nexport const ProductFilterSchema = z.object({\r\n  category: z.string().optional(),\r\n  minPrice: z.number().positive().optional(),\r\n  maxPrice: z.number().positive().optional(),\r\n  inStock: z.boolean().optional(),\r\n  tags: z.array(z.string()).optional(),\r\n});\r\n\r\nexport type Product = z.infer<typeof ProductSchema>;\r\nexport type CreateProduct = z.infer<typeof CreateProductSchema>;\r\nexport type UpdateProduct = z.infer<typeof UpdateProductSchema>;\r\nexport type ProductFilter = z.infer<typeof ProductFilterSchema>; ","import { z } from 'zod';\r\n\r\nexport const ApiResponseSchema = z.object({\r\n  success: z.boolean(),\r\n  message: z.string(),\r\n  data: z.unknown().optional(),\r\n  error: z.object({\r\n    code: z.string(),\r\n    message: z.string(),\r\n    details: z.unknown().optional(),\r\n  }).optional(),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport const PaginationSchema = z.object({\r\n  page: z.number().int().min(1, 'Page must be at least 1').default(1),\r\n  limit: z.number().int().min(1, 'Limit must be at least 1').max(100, 'Limit must be at most 100').default(10),\r\n  total: z.number().int().min(0, 'Total must be non-negative'),\r\n  totalPages: z.number().int().min(0, 'Total pages must be non-negative'),\r\n});\r\n\r\nexport const PaginatedResponseSchema = ApiResponseSchema.extend({\r\n  data: z.object({\r\n    items: z.array(z.unknown()),\r\n    pagination: PaginationSchema,\r\n  }),\r\n});\r\n\r\nexport const ErrorResponseSchema = z.object({\r\n  success: z.literal(false),\r\n  message: z.string(),\r\n  error: z.object({\r\n    code: z.string(),\r\n    message: z.string(),\r\n    details: z.unknown().optional(),\r\n  }),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport const SuccessResponseSchema = z.object({\r\n  success: z.literal(true),\r\n  message: z.string(),\r\n  data: z.unknown().optional(),\r\n  timestamp: z.date(),\r\n});\r\n\r\nexport type ApiResponse<T = unknown> = {\r\n  success: boolean;\r\n  message: string;\r\n  data?: T;\r\n  error?: {\r\n    code: string;\r\n    message: string;\r\n    details?: unknown;\r\n  };\r\n  timestamp: Date;\r\n};\r\n\r\nexport type PaginatedResponse<T = unknown> = {\r\n  success: boolean;\r\n  message: string;\r\n  data: {\r\n    items: T[];\r\n    pagination: Pagination;\r\n  };\r\n  timestamp: Date;\r\n};\r\n\r\nexport type Pagination = z.infer<typeof PaginationSchema>;\r\nexport type ErrorResponse = z.infer<typeof ErrorResponseSchema>;\r\nexport type SuccessResponse<T = unknown> = Omit<z.infer<typeof SuccessResponseSchema>, 'data'> & { data?: T }; ","import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n}\r\n","export function formatPrice(\r\n  price: number,\r\n  currency: 'USD' | 'EUR' | 'VND' = 'USD'\r\n): string {\r\n  const formatters = {\r\n    USD: new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }),\r\n    EUR: new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }),\r\n    VND: new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }),\r\n  };\r\n\r\n  return formatters[currency].format(price);\r\n}\r\n\r\nexport function formatDate(date: Date, locale: string = 'en-US'): string {\r\n  return new Intl.DateTimeFormat(locale, {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  }).format(date);\r\n}\r\n\r\nexport function formatDateTime(date: Date, locale: string = 'en-US'): string {\r\n  return new Intl.DateTimeFormat(locale, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(date);\r\n}\r\n\r\nexport function generateId(): string {\r\n  return crypto.randomUUID();\r\n}\r\n\r\nexport function slugify(text: string): string {\r\n  return text\r\n    .toLowerCase()\r\n    .replace(/[^\\w\\s-]/g, '')\r\n    .replace(/[\\s_-]+/g, '-')\r\n    .replace(/^-+|-+$/g, '');\r\n}\r\n\r\nexport function capitalize(text: string): string {\r\n  return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n}\r\n\r\nexport function truncate(text: string, maxLength: number): string {\r\n  if (text.length <= maxLength) return text;\r\n  return text.slice(0, maxLength - 3) + '...';\r\n}\r\n\r\nexport function debounce<T extends (...args: any[]) => void>(\r\n  func: T,\r\n  delay: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeoutId: ReturnType<typeof setTimeout>;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  };\r\n}\r\n\r\nexport function throttle<T extends (...args: any[]) => void>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean;\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n}\r\n\r\nexport function isEmail(email: string): boolean {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport function isUrl(url: string): boolean {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function omit<T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Omit<T, K> {\r\n  const result = { ...obj };\r\n  keys.forEach(key => delete result[key]);\r\n  return result;\r\n}\r\n\r\nexport function pick<T extends Record<string, any>, K extends keyof T>(\r\n  obj: T,\r\n  keys: K[]\r\n): Pick<T, K> {\r\n  const result = {} as Pick<T, K>;\r\n  keys.forEach(key => {\r\n    if (key in obj) {\r\n      result[key] = obj[key];\r\n    }\r\n  });\r\n  return result;\r\n} ","import { z } from 'zod';\r\nimport type { ApiResponse, ErrorResponse, SuccessResponse } from '../schemas/api.schema';\r\n\r\nexport class ValidationError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public errors: z.ZodError\r\n  ) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n  }\r\n}\r\n\r\nexport function validateSchema<T>(\r\n  schema: z.ZodSchema<T>,\r\n  data: unknown\r\n): { success: true; data: T } | { success: false; error: z.ZodError } {\r\n  try {\r\n    const result = schema.parse(data);\r\n    return { success: true, data: result };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return { success: false, error };\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function validateSchemaOrThrow<T>(schema: z.ZodSchema<T>, data: unknown): T {\r\n  try {\r\n    return schema.parse(data);\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      throw new ValidationError('Validation failed', error);\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function safeValidate<T>(\r\n  schema: z.ZodSchema<T>,\r\n  data: unknown\r\n): { data: T | null; errors: string[] } {\r\n  try {\r\n    const result = schema.parse(data);\r\n    return { data: result, errors: [] };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      const errors = error.errors.map(err => \r\n        `${err.path.join('.')}: ${err.message}`\r\n      );\r\n      return { data: null, errors };\r\n    }\r\n    return { data: null, errors: ['Unknown validation error'] };\r\n  }\r\n}\r\n\r\nexport function createApiResponse<T = unknown>(\r\n  success: boolean,\r\n  message: string,\r\n  data?: T,\r\n  error?: { code: string; message: string; details?: unknown }\r\n): ApiResponse<T> {\r\n  return {\r\n    success,\r\n    message,\r\n    data,\r\n    error,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\nexport function createSuccessResponse<T = unknown>(\r\n  message: string,\r\n  data?: T\r\n): SuccessResponse<T> {\r\n  return {\r\n    success: true,\r\n    message,\r\n    data,\r\n    timestamp: new Date(),\r\n  };\r\n}\r\n\r\nexport function createErrorResponse(\r\n  message: string,\r\n  code: string,\r\n  details?: unknown\r\n): ErrorResponse {\r\n  return {\r\n    success: false,\r\n    message,\r\n    error: {\r\n      code,\r\n      message,\r\n      details,\r\n    },\r\n    timestamp: new Date(),\r\n  };\r\n} ","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"]}